<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="melodiiDataSet" targetNamespace="http://tempuri.org/melodiiDataSet.xsd" xmlns:mstns="http://tempuri.org/melodiiDataSet.xsd" xmlns="http://tempuri.org/melodiiDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="melodiiConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="melodiiConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Melodii.Properties.Settings.GlobalReference.Default.melodiiConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MelodiiTableAdapter" GeneratorDataComponentClassName="MelodiiTableAdapter" Name="Melodii" UserDataComponentName="MelodiiTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="melodiiConnectionString (Settings)" DbObjectName="dbo.Melodii" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Melodii] WHERE (([ID_Melodie] = @Original_ID_Melodie) AND ([Nume] = @Original_Nume) AND ([Puncte] = @Original_Puncte))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Melodie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Melodie" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Puncte" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Puncte" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Melodii] ([Nume], [Puncte]) VALUES (@Nume, @Puncte);
SELECT ID_Melodie, Nume, Puncte FROM Melodii WHERE (ID_Melodie = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Puncte" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Puncte" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Melodie, Nume, Puncte FROM dbo.Melodii</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Melodii] SET [Nume] = @Nume, [Puncte] = @Puncte WHERE (([ID_Melodie] = @Original_ID_Melodie) AND ([Nume] = @Original_Nume) AND ([Puncte] = @Original_Puncte));
SELECT ID_Melodie, Nume, Puncte FROM Melodii WHERE (ID_Melodie = @ID_Melodie)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Puncte" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Puncte" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Melodie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Melodie" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Puncte" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Puncte" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Melodie" ColumnName="ID_Melodie" DataSourceName="[C:\USERS\USER\DESKTOP\MELODII_8\MELODII\MELODII.MDF].dbo.Melodii" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Melodie" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Melodie" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Melodie" DataSetColumn="ID_Melodie" />
              <Mapping SourceColumn="Nume" DataSetColumn="Nume" />
              <Mapping SourceColumn="Puncte" DataSetColumn="Puncte" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="melodiiDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="melodiiDataSet" msprop:Generator_UserDSName="melodiiDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Melodii" msprop:Generator_TableClassName="MelodiiDataTable" msprop:Generator_TableVarName="tableMelodii" msprop:Generator_TablePropName="Melodii" msprop:Generator_RowDeletingName="MelodiiRowDeleting" msprop:Generator_RowChangingName="MelodiiRowChanging" msprop:Generator_RowEvHandlerName="MelodiiRowChangeEventHandler" msprop:Generator_RowDeletedName="MelodiiRowDeleted" msprop:Generator_UserTableName="Melodii" msprop:Generator_RowChangedName="MelodiiRowChanged" msprop:Generator_RowEvArgName="MelodiiRowChangeEvent" msprop:Generator_RowClassName="MelodiiRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Melodie" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_Melodie" msprop:Generator_ColumnPropNameInRow="ID_Melodie" msprop:Generator_ColumnPropNameInTable="ID_MelodieColumn" msprop:Generator_UserColumnName="ID_Melodie" type="xs:int" />
              <xs:element name="Nume" msprop:Generator_ColumnVarNameInTable="columnNume" msprop:Generator_ColumnPropNameInRow="Nume" msprop:Generator_ColumnPropNameInTable="NumeColumn" msprop:Generator_UserColumnName="Nume">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Puncte" msprop:Generator_ColumnVarNameInTable="columnPuncte" msprop:Generator_ColumnPropNameInRow="Puncte" msprop:Generator_ColumnPropNameInTable="PuncteColumn" msprop:Generator_UserColumnName="Puncte" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Melodii" />
      <xs:field xpath="mstns:ID_Melodie" />
    </xs:unique>
  </xs:element>
</xs:schema>